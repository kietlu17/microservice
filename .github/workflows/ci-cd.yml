name: CI - Docker Compose

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Install Docker Compose plugin
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose-plugin

      - name: Create .env files
        run: |
          echo "AUTH_SERVICE=http://auth_service:3000" >> api-gateway/.env
          echo "ORDER_SERVICE=http://order_service:3002" >> api-gateway/.env
          echo "PRODUCT_SERVICE=http://product_service:3001" >> api-gateway/.env
          echo "PORT_API=3003" >> api-gateway/.env

          echo "MONGODB_AUTH_URI=${{ secrets.MONGODB_AUTH_URI }}" >> auth/.env
          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> auth/.env
          echo "PORT_AUTH=3000" >> auth/.env

          echo "MONGODB_ORDER_URI=${{ secrets.MONGODB_ORDER_URI }}" >> order/.env
          echo "RABBITMQ_URI=${{ secrets.RABBITMQ_URI }}" >> order/.env
          echo "RABBITMQ_QUEUE_ORDERS=orders" >> order/.env
          echo "RABBITMQ_QUEUE_PRODUCTS=products" >> order/.env
          echo "PORT_ORDER=3002" >> order/.env

          echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> product/.env
          echo "MONGODB_PRODUCT_URI=${{ secrets.MONGODB_PRODUCT_URI }}" >> product/.env
          echo "MONGODB_ORDER_URI=${{ secrets.MONGODB_ORDER_URI }}" >> product/.env
          echo "RABBITMQ_URI=${{ secrets.RABBITMQ_URI }}" >> product/.env
          echo "RABBITMQ_QUEUE_ORDERS=orders" >> product/.env
          echo "RABBITMQ_QUEUE_PRODUCTS=products" >> product/.env
          echo "PORT_PRODUCT=3001" >> product/.env
          echo "LOGIN_TEST_USER=${{ secrets.LOGIN_TEST_USER }}" >> product/.env
          echo "LOGIN_TEST_PASSWORD=${{ secrets.LOGIN_TEST_PASSWORD }}" >> product/.env

      - name: Build and start services with docker-compose
        run: docker compose up -d --build

      - name: Wait for MongoDB
        run: |
          echo "Waiting for MongoDB..."
          for i in {1..30}; do nc -z localhost 27017 && break || sleep 2; done

      - name: Wait for RabbitMQ
        run: |
          echo "Waiting for RabbitMQ..."
          for i in {1..30}; do nc -z localhost 15672 && break || sleep 2; done

      - name: Run tests for auth
        run: |
          cd auth
          npm ci
          npm test

      - name: Run tests for product
        run: |
          cd product
          npm ci
          npm test

      - name: Cleanup
        if: always()
        run: docker compose down -v
